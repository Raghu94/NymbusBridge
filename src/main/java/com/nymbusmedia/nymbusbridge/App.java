package com.nymbusmedia.nymbusbridge;


import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortDataListener;
import com.fazecast.jSerialComm.SerialPortEvent;
import com.fazecast.jSerialComm.SerialPortPacketListener;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App implements SerialPortDataListener, SerialPortPacketListener {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        SerialPort[] comPorts = SerialPort.getCommPorts();
        System.out.println("List of available ports: ");
        for(SerialPort serialPort : comPorts) {
            System.out.println( serialPort.getDescriptivePortName() + ":" + serialPort.getSystemPortName());
        }

        App myApp = new App();


        SerialPort airBeacon = comPorts[2];

        //airBeacon.addDataListener(myApp);
        airBeacon.addDataListener(new BasicOutputListener());




//        airBeacon.setBaudRate(115200);
//        airBeacon.setParity(SerialPort.ONE_STOP_BIT);
        airBeacon.setComPortParameters(115200, 8, 1, SerialPort.NO_PARITY);
        airBeacon.openPort();
        try {
            if(airBeacon.bytesAvailable() >= 0) {
                byte[] writeBuffer = "@be1\r".getBytes(); // @b command
                int length = writeBuffer.length;
                airBeacon.writeBytes(writeBuffer, length);
                Thread.sleep(2000);
//                byte[] readBuffer = new byte[airBeacon.bytesAvailable()];
//                Thread.sleep(1000);
//                int numRead = airBeacon.readBytes(readBuffer, readBuffer.length);
//                if(numRead > 0) {
//                    System.out.println("Read " + numRead + " bytes.");
//                    System.out.println("Read: " + new String(readBuffer));
//                }

            }
        } catch(Exception e) {e.printStackTrace();}
        airBeacon.closePort();
    }

    @Override
    public int getListeningEvents() {
        System.out.println("getListeningEvents");
        return SerialPort.LISTENING_EVENT_DATA_RECEIVED;
    }

    @Override
    public void serialEvent(SerialPortEvent serialPortEvent) {
//        System.out.println("Received type: " + serialPortEvent.getEventType());
        System.out.println("Received: " + new String(serialPortEvent.getReceivedData()));

    }

    @Override
    public int getPacketSize() {
        System.out.println("Get packet size");
        return 29;
    }
}
